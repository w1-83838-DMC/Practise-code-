package com.sunbeam;

public class List {
	static class Node{
		private char data;
		private Node next;
		private Node(char value) // default constructor 
		{
			data=value;
			next=null;
		}
	}
	private Node head;
	private Node tail;
	private int count;
	public List()
	{
		head=tail=null; // initially null
		count=0;
	}
	public boolean isEmpty()
	{
		return head==null && tail==null;
	}
	
	public void addFirst(char value)
	{
		//0. create Node 
		Node newnode= new Node(value);
		// 1. if empty 
		if(head==null)
		{
			// add newnode into head and tail 
			head=tail=newnode;
			// make list circular
			newnode.next=head;
		}else { // if not empty 
			// add first node into next of newnode
			newnode.next=head;
			// add newnode into next of last node 
			tail.next=newnode;
			// move head on newnode 
			head=newnode;
		}
		// increment count 
		count++;
	}
	public void display()
	{
		// 0. if list is empty 
		if(head==null)
			return;
		// create trav and start at first node
		Node trav=head;
		// visit/ print current node 
		do {
			System.out.print(" "+trav.data);
			// go to the next node 
			trav=trav.next;
		}while(trav!=head);
	}
	
	

}
